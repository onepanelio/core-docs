(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{112:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return s})),t.d(a,"metadata",(function(){return l})),t.d(a,"rightToc",(function(){return b})),t.d(a,"default",(function(){return m}));var n=t(2),r=t(6),o=(t(0),t(121)),c=t(128),i=t(129),s={title:"MicroK8s on remote machines",sidebar_label:"MicroK8s on remote machines",description:"Onepanel - Setting up MicroK8s on a remote machines"},l={unversionedId:"deployment/configuration/remote-microk8s",id:"deployment/configuration/remote-microk8s",isDocsHomePage:!1,title:"MicroK8s on remote machines",description:"Onepanel - Setting up MicroK8s on a remote machines",source:"@site/docs/deployment/configuration/remote-microk8s.md",slug:"/deployment/configuration/remote-microk8s",permalink:"/docs/deployment/configuration/remote-microk8s",editUrl:"https://github.com/onepanelio/core-docs/tree/master/docs/deployment/configuration/remote-microk8s.md",version:"current",sidebar_label:"MicroK8s on remote machines",sidebar:"deployment",previous:{title:"Local DNS with Dnsmasq",permalink:"/docs/deployment/configuration/dns"},next:{title:"Adding components",permalink:"/docs/deployment/components/add"}},b=[],p={rightToc:b};function m(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},p,t,{components:a,mdxType:"MDXLayout"}),Object(o.b)("p",null,"You can set up and access Onepanel on a remote computer that you can SSH to.\nThis can be a VM in the cloud, or multipass running locally. In either case, it has to be running\nUbuntu 20.04 or higher."),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Set up your VM"),Object(o.b)(c.a,{groupId:"provider",defaultValue:"cloud_vm",values:[{label:"Cloud VM",value:"cloud_vm"},{label:"Multipass",value:"multipass"}],mdxType:"Tabs"},Object(o.b)(i.a,{value:"cloud_vm",mdxType:"TabItem"},Object(o.b)("p",{parentName:"li"},"Set up your VM according to your cloud provider instructions."),Object(o.b)("div",Object(n.a)({parentName:"li"},{className:"admonition admonition-important alert alert--info"}),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"important")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"Onepanel requires at least 40GB of hard disk space, so if your VM doesn't have that much you'll\nhave to mount an external disk. In that case, make sure to do step 5.")))),Object(o.b)(i.a,{value:"multipass",mdxType:"TabItem"},Object(o.b)("p",{parentName:"li"},"Install ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://multipass.run/"}),"Multipass"),", then launch a VM"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"multipass launch --cpus 2 --mem 12G --disk 40G --name sample\n")))),Object(o.b)("div",Object(n.a)({parentName:"li"},{className:"admonition admonition-note alert alert--secondary"}),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"All further instructions are in your remote computer/vm unless otherwise indicated.")))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Install MicroK8s"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo snap install microk8s --channel=1.19/stable --classic\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Update your permissions"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo usermod -a -G microk8s $USER\nsudo chown -f -R $USER ~./kube\n")),Object(o.b)("p",{parentName:"li"},"Log out and in for changes to take effect"),Object(o.b)("p",{parentName:"li"},"Wait for microk8s to be ready"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"microk8s status --wait-ready\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Update API server config"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo nano /var/snap/microk8s/current/args/kube-apiserver\n")),Object(o.b)("p",{parentName:"li"},"Add to the top"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"--service-account-signing-key-file=${SNAP_DATA}/certs/serviceaccount.key\n--service-account-key-file=${SNAP_DATA}/certs/serviceaccount.key\n--service-account-issuer=api\n--service-account-api-audiences=api,nats\n")),Object(o.b)("p",{parentName:"li"},"Restart microk8s for the changes to take effect"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"microk8s stop && microk8s start && microk8s status --wait-ready\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"(Optional) Mount external disks"),Object(o.b)("p",{parentName:"li"},"If you are using a VM in the cloud, you need at least 40GB of hard disk space.\nMount your disk if you haven't already. We'll assume your disk is mounted at ",Object(o.b)("inlineCode",{parentName:"p"},"/data")),Object(o.b)("p",{parentName:"li"},"We need to tell microk8s to use the mounted disk so we have more storage space."),Object(o.b)("p",{parentName:"li"},"Create the following directories"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo mkdir -p /data/var/lib/containerd\nsudo mkdir -p /data/run/containerd\n")),Object(o.b)("p",{parentName:"li"},"Edit the containerd arguments"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo nano /var/snap/microk8s/current/args/containerd\n")),Object(o.b)("p",{parentName:"li"},"Change the contents to"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"--config ${SNAP_DATA}/args/containerd.toml\n--root /data/var/lib/containerd\n--state /data/run/containerd\n--address ${SNAP_COMMON}/run/containerd.sock\n")),Object(o.b)("p",{parentName:"li"},"Then, restart microk8s"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"microk8s stop && microk8s start && microk8s status --wait-ready\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Enable microk8s addons"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo microk8s enable storage dns rbac\nmicrok8s status --wait-ready\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Configure DNS"),Object(o.b)(c.a,{groupId:"provider",defaultValue:"cloud_vm",values:[{label:"Cloud VM",value:"cloud_vm"},{label:"Multipass",value:"multipass"}],mdxType:"Tabs"},Object(o.b)(i.a,{value:"cloud_vm",mdxType:"TabItem"},Object(o.b)("p",{parentName:"li"},"i. Edit the resolvconf"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo nano /var/snap/microk8s/current/args/kubelet\n")),Object(o.b)("p",{parentName:"li"},"Add to the top"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"--resolv-conf=/run/systemd/resolve/resolv.conf\n")),Object(o.b)("p",{parentName:"li"},"ii. Edit coredns configmap so we point to the resolv.conf file"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"microk8s kubectl edit cm coredns -n kube-system\n")),Object(o.b)("p",{parentName:"li"},"Set the forward section to:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"forward . /etc/resolv.conf 8.8.8.8  8.8.4.4\n")),Object(o.b)("p",{parentName:"li"},"iii. Restart microk8s"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"microk8s stop && microk8s start && microk8s status --wait-ready\n"))),Object(o.b)(i.a,{value:"multipass",mdxType:"TabItem"},"No configuration is required for multipass."))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Install Onepanel"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"curl -sLO https://github.com/onepanelio/onepanel/releases/download/v0.21.0/opctl-linux-amd64\nchmod +x opctl-linux-amd64\nsudo mv ./opctl-linux-amd64 /usr/local/bin/opctl\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Initialize Onepanel"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"opctl init --provider microk8s \\\n--enable-metallb \\\n--artifact-repository-provider abs\n")),Object(o.b)("div",Object(n.a)({parentName:"li"},{className:"admonition admonition-note alert alert--secondary"}),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"I used Azure Block Storage (abs) as the artifact-repository-provider above, but you can use s3, abs, or gcs")))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Populate ",Object(o.b)("inlineCode",{parentName:"p"},"params.yaml")," by following the instructions in the template, and referring to ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/deployment/configuration/files#sections"}),"configuration file sections")," for more detailed information."),Object(o.b)("p",{parentName:"li"},"Here's a mostly filled out ",Object(o.b)("inlineCode",{parentName:"p"},"params.yaml")," for a quickstart. You'll need to fill out ",Object(o.b)("inlineCode",{parentName:"p"},"artifactRepository")),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"application:\n  defaultNamespace: example\n  domain: onepanel.test\n  fqdn: app.onepanel.test\n  insecure: true\n  nodePool:\n    label: node.kubernetes.io/instance-type\n    options:\n      - name: 'Local machine'\n        value: 'local'\n  provider: microk8s\n# You need to fill this part out according to your artifact repository provider\nartifactRepository:\n# FILL ME OUT\ndatabase:\n  databaseName: onepanel\n  driverName: postgres\n  host: postgres\n  password: sample12!\n  port: 5432\n  username: admin\nmetalLb:\n  addresses:\n    - 192.168.99.0/32\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Deploy onepanel"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"microk8s config > kubeconfig\nKUBECONFIG=./kubeconfig opctl apply\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Label your nodes"),Object(o.b)("p",{parentName:"li"},"To allow Workspaces to run on your machine(s) you need to label them."),Object(o.b)("p",{parentName:"li"},"First, get the names of your nodes by running:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"microk8s kubectl get nodes\n")),Object(o.b)("p",{parentName:"li"},"You will get results similar to below:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"NAME     STATUS   ROLES    AGE   VERSION\nsample   Ready    <none>   11m   v1.19.8-34+811e9feeade1d3\n")),Object(o.b)("p",{parentName:"li"},"Then, for each node name, add the label from your ",Object(o.b)("inlineCode",{parentName:"p"},"application.nodePool.label")," from your ",Object(o.b)("inlineCode",{parentName:"p"},"params.yaml"),", above we used,"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"nodePool:\n    label: node.kubernetes.io/instance-type\n    options:\n      - name: 'Local machine'\n        value: local\n")),Object(o.b)("p",{parentName:"li"},"and the node above is called ",Object(o.b)("inlineCode",{parentName:"p"},"sample"),", you can label the node as follows:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"microk8s kubectl label node sample node.kubernetes.io/instance-type=local\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Expose onepanel using Nginx"),Object(o.b)("p",{parentName:"li"},"Since Onepanel is running inside a VM, we need to expose it so we can access it on our local computers.\nTo do so, we use nginx."),Object(o.b)("p",{parentName:"li"},"First, install nginx."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo apt-get install nginx\n")),Object(o.b)("p",{parentName:"li"},"Then, configure nginx to expose Onepanel"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo nano /etc/nginx/sites-available/default \n")),Object(o.b)("p",{parentName:"li"},"Change this"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),"location / {\n        # First attempt to serve request as file, then\n        # as directory, then fall back to displaying a 404.\n        try_files $uri $uri/ =404;\n}\n")),Object(o.b)("p",{parentName:"li"},"to"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),'location / {\n  proxy_pass http://192.168.99.0; # the ip address you gave metallb\n  proxy_set_header Host $host;\n  proxy_http_version 1.1;\n  proxy_set_header Upgrade $http_upgrade;\n  proxy_set_header Connection "upgrade";\n}\n')),Object(o.b)("p",{parentName:"li"},"Then, stop editing and run"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo nginx -s reload\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Configure DNS "),Object(o.b)("p",{parentName:"li"},"On your local machine, we need to point DNS so it knows about Onepanel."),Object(o.b)("p",{parentName:"li"},"Get the IP address of your VM. For VMs in the cloud, this is given to you.\nIn multipass you can see it with ",Object(o.b)("inlineCode",{parentName:"p"},"multipass list")),Object(o.b)("p",{parentName:"li"},"For this example, we'll assume the IP is: ",Object(o.b)("inlineCode",{parentName:"p"},"15.92.2.237")),Object(o.b)("p",{parentName:"li"},"Then, edit your hosts file using a text editor. The location depends on your operation system."),Object(o.b)(c.a,{groupId:"os",defaultValue:"linux",values:[{label:"Linux",value:"linux"},{label:"Mac",value:"mac"},{label:"Windows",value:"windows"}],mdxType:"Tabs"},Object(o.b)(i.a,{value:"linux",mdxType:"TabItem"},Object(o.b)("p",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"p"},"/etc/hosts"))),Object(o.b)(i.a,{value:"mac",mdxType:"TabItem"},Object(o.b)("p",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"p"},"/etc/hosts"))),Object(o.b)(i.a,{value:"windows",mdxType:"TabItem"},Object(o.b)("p",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"p"},"C:\\Windows\\System32\\drivers\\etc\\hosts")))),Object(o.b)("p",{parentName:"li"},"and add to the top"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),"# <ip> <fqdn>\n15.92.2.237 app.onepanel.test\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Use Onepanel"),Object(o.b)("p",{parentName:"li"},"In your VM, Get your authentication login with"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"microk8s config > kubeconfig\nKUBECONFIG=./kubeconfig opctl auth token\n")),Object(o.b)("p",{parentName:"li"},"Open up ",Object(o.b)("inlineCode",{parentName:"p"},"app.onepanel.test")," in your browser, paste in the credentials, and you are good to go!"))))}m.isMDXComponent=!0},121:function(e,a,t){"use strict";t.d(a,"a",(function(){return p})),t.d(a,"b",(function(){return d}));var n=t(0),r=t.n(n);function o(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function c(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?c(Object(t),!0).forEach((function(a){o(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=r.a.createContext({}),b=function(e){var a=r.a.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},p=function(e){var a=b(e.components);return r.a.createElement(l.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return r.a.createElement(r.a.Fragment,{},a)}},u=r.a.forwardRef((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=b(t),u=n,d=p["".concat(c,".").concat(u)]||p[u]||m[u]||o;return t?r.a.createElement(d,i(i({ref:a},l),{},{components:t})):r.a.createElement(d,i({ref:a},l))}));function d(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,c=new Array(o);c[0]=u;var i={};for(var s in a)hasOwnProperty.call(a,s)&&(i[s]=a[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,c[1]=i;for(var l=2;l<o;l++)c[l]=t[l];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},123:function(e,a,t){"use strict";function n(e){var a,t,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(a=0;a<e.length;a++)e[a]&&(t=n(e[a]))&&(r&&(r+=" "),r+=t);else for(a in e)e[a]&&(r&&(r+=" "),r+=a);return r}a.a=function(){for(var e,a,t=0,r="";t<arguments.length;)(e=arguments[t++])&&(a=n(e))&&(r&&(r+=" "),r+=a);return r}},124:function(e,a,t){"use strict";var n=t(0);const r=Object(n.createContext)(void 0);a.a=r},125:function(e,a,t){"use strict";var n=t(0),r=t(124);a.a=function(){const e=Object(n.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},128:function(e,a,t){"use strict";var n=t(0),r=t.n(n),o=t(125),c=t(123),i=t(48),s=t.n(i);const l=37,b=39;a.a=function(e){const{block:a,children:t,defaultValue:i,values:p,groupId:m}=e,{tabGroupChoices:u,setTabGroupChoices:d}=Object(o.a)(),[O,j]=Object(n.useState)(i),[N,g]=Object(n.useState)(!1);if(null!=m){const e=u[m];null!=e&&e!==O&&p.some(a=>a.value===e)&&j(e)}const h=e=>{j(e),null!=m&&d(m,e)},f=[],v=e=>{e.metaKey||e.altKey||e.ctrlKey||g(!0)},y=()=>{g(!1)};return Object(n.useEffect)(()=>{window.addEventListener("keydown",v),window.addEventListener("mousedown",y)},[]),r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(c.a)("tabs",{"tabs--block":a})},p.map(({value:e,label:a})=>r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":O===e,className:Object(c.a)("tabs__item",s.a.tabItem,{"tabs__item--active":O===e}),style:N?{}:{outline:"none"},key:e,ref:e=>f.push(e),onKeyDown:e=>{((e,a,t)=>{switch(t.keyCode){case b:((e,a)=>{const t=e.indexOf(a)+1;e[t]?e[t].focus():e[0].focus()})(e,a);break;case l:((e,a)=>{const t=e.indexOf(a)-1;e[t]?e[t].focus():e[e.length-1].focus()})(e,a)}})(f,e.target,e),v(e)},onFocus:()=>h(e),onClick:()=>{h(e),g(!1)},onPointerDown:()=>g(!1)},a))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},n.Children.toArray(t).filter(e=>e.props.value===O)[0]))}},129:function(e,a,t){"use strict";var n=t(0),r=t.n(n);a.a=function(e){return r.a.createElement("div",null,e.children)}}}]);